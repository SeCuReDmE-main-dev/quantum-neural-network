<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{7E1527F8-F5A2-3CA9-8B12-192537113FB7}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.26100.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>libxcfun</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\1af30d04aed2caf80264653de481eabe\libxcfun-mkdir.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Creating directories for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -Dcfgdir=/Debug -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Debug/libxcfun-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Creating directories for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -Dcfgdir=/Release -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Release/libxcfun-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Creating directories for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -Dcfgdir=/MinSizeRel -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/MinSizeRel/libxcfun-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Creating directories for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -Dcfgdir=/RelWithDebInfo -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/RelWithDebInfo/libxcfun-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\1af30d04aed2caf80264653de481eabe\libxcfun-download.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing download step (git clone) for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-gitclone.cmake
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Debug/libxcfun-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-gitinfo.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing download step (git clone) for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-gitclone.cmake
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Release/libxcfun-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-gitinfo.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing download step (git clone) for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-gitclone.cmake
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/MinSizeRel/libxcfun-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-gitinfo.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing download step (git clone) for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-gitclone.cmake
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/RelWithDebInfo/libxcfun-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-gitinfo.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\1af30d04aed2caf80264653de481eabe\libxcfun-update.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing update step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -Dcan_fetch=YES -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-gitupdate.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-gitupdate.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-update-info.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-update</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing update step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -Dcan_fetch=YES -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-gitupdate.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-gitupdate.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-update-info.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-update</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing update step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -Dcan_fetch=YES -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-gitupdate.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-gitupdate.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-update-info.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-update</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing update step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -Dcan_fetch=YES -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/tmp/libxcfun-gitupdate.cmake
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-gitupdate.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-update-info.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-update</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\1af30d04aed2caf80264653de481eabe\libxcfun-patch.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">No patch step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E echo_append
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Debug/libxcfun-patch
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-patch-info.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-update;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-patch</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">No patch step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E echo_append
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Release/libxcfun-patch
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-patch-info.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-update;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-patch</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">No patch step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E echo_append
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/MinSizeRel/libxcfun-patch
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-patch-info.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-update;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-patch</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">No patch step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E echo_append
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/RelWithDebInfo/libxcfun-patch
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\libxcfun-patch-info.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-update;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-patch</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\1af30d04aed2caf80264653de481eabe\libxcfun-configure.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing configure step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -DCMAKE_INSTALL_PREFIX=D:/server-database-prefab/quantum-neural-network/phi_framework/build/external -DCMAKE_BUILD_TYPE=Release -DXCFUN_PYTHON_INTERFACE=OFF "-GVisual Studio 17 2022" "-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Preview" -S D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun -B D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Debug/libxcfun-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-cfgcmd.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-patch;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing configure step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -DCMAKE_INSTALL_PREFIX=D:/server-database-prefab/quantum-neural-network/phi_framework/build/external -DCMAKE_BUILD_TYPE=Release -DXCFUN_PYTHON_INTERFACE=OFF "-GVisual Studio 17 2022" "-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Preview" -S D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun -B D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Release/libxcfun-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-cfgcmd.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-patch;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing configure step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -DCMAKE_INSTALL_PREFIX=D:/server-database-prefab/quantum-neural-network/phi_framework/build/external -DCMAKE_BUILD_TYPE=Release -DXCFUN_PYTHON_INTERFACE=OFF "-GVisual Studio 17 2022" "-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Preview" -S D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun -B D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/MinSizeRel/libxcfun-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-cfgcmd.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-patch;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing configure step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -DCMAKE_INSTALL_PREFIX=D:/server-database-prefab/quantum-neural-network/phi_framework/build/external -DCMAKE_BUILD_TYPE=Release -DXCFUN_PYTHON_INTERFACE=OFF "-GVisual Studio 17 2022" "-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Preview" -S D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun -B D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/RelWithDebInfo/libxcfun-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-cfgcmd.txt;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-patch;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\1af30d04aed2caf80264653de481eabe\libxcfun-build.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing build step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe --build . --config Debug
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Debug/libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing build step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe --build . --config Release
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Release/libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing build step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe --build . --config MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/MinSizeRel/libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing build step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe --build . --config RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/RelWithDebInfo/libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\1af30d04aed2caf80264653de481eabe\libxcfun-install.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing install step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe --build . --config Debug --target install
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Debug/libxcfun-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing install step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe --build . --config Release --target install
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Release/libxcfun-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing install step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe --build . --config MinSizeRel --target install
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/MinSizeRel/libxcfun-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing install step for 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-build
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe --build . --config RelWithDebInfo --target install
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/RelWithDebInfo/libxcfun-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\ab45a414c5e79129bce861e94420c793\libxcfun-complete.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Completed 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E make_directory D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/Debug
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/Debug/libxcfun-complete
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Debug/libxcfun-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-install;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-mkdir;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-download;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-update;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-patch;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-configure;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Debug\libxcfun-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\Debug\libxcfun-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Completed 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E make_directory D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/Release
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/Release/libxcfun-complete
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/Release/libxcfun-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-install;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-mkdir;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-download;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-update;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-patch;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-configure;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\Release\libxcfun-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\Release\libxcfun-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Completed 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E make_directory D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/MinSizeRel/libxcfun-complete
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/MinSizeRel/libxcfun-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-install;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-mkdir;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-download;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-update;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-patch;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-configure;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\MinSizeRel\libxcfun-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\MinSizeRel\libxcfun-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Completed 'libxcfun'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E make_directory D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/RelWithDebInfo/libxcfun-complete
if %errorlevel% neq 0 goto :cmEnd
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -E touch D:/server-database-prefab/quantum-neural-network/phi_framework/build/libxcfun-prefix/src/libxcfun-stamp/RelWithDebInfo/libxcfun-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-install;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-mkdir;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-download;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-update;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-patch;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-configure;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\src\libxcfun-stamp\RelWithDebInfo\libxcfun-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\RelWithDebInfo\libxcfun-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\98b86bb357119353e1f09d83bbf8a13d\libxcfun.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\Debug\libxcfun-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\libxcfun</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\Release\libxcfun-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\libxcfun</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\MinSizeRel\libxcfun-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\libxcfun</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\RelWithDebInfo\libxcfun-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\libxcfun</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\server-database-prefab\quantum-neural-network\phi_framework\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/server-database-prefab/quantum-neural-network/phi_framework/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -SD:/server-database-prefab/quantum-neural-network/phi_framework -BD:/server-database-prefab/quantum-neural-network/phi_framework/build --check-stamp-file D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCXXInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeGenericSystem.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeInitializeConfigs.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeLanguageInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeRCInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\PatchInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\UpdateInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\cfgcmd.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\gitclone.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\gitupdate.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\mkdirs.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\shared_internal_commands.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindGit.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-Initialize.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\WindowsPaths.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\FindOpenBLAS.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\FindXCFun.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeCCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeCXXCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeRCCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeSystem.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-mkdirs.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/server-database-prefab/quantum-neural-network/phi_framework/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -SD:/server-database-prefab/quantum-neural-network/phi_framework -BD:/server-database-prefab/quantum-neural-network/phi_framework/build --check-stamp-file D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCXXInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeGenericSystem.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeInitializeConfigs.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeLanguageInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeRCInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\PatchInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\UpdateInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\cfgcmd.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\gitclone.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\gitupdate.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\mkdirs.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\shared_internal_commands.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindGit.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-Initialize.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\WindowsPaths.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\FindOpenBLAS.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\FindXCFun.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeCCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeCXXCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeRCCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeSystem.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-mkdirs.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/server-database-prefab/quantum-neural-network/phi_framework/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -SD:/server-database-prefab/quantum-neural-network/phi_framework -BD:/server-database-prefab/quantum-neural-network/phi_framework/build --check-stamp-file D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCXXInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeGenericSystem.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeInitializeConfigs.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeLanguageInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeRCInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\PatchInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\UpdateInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\cfgcmd.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\gitclone.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\gitupdate.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\mkdirs.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\shared_internal_commands.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindGit.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-Initialize.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\WindowsPaths.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\FindOpenBLAS.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\FindXCFun.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeCCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeCXXCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeRCCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeSystem.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-mkdirs.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/server-database-prefab/quantum-neural-network/phi_framework/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\bin\cmake.exe -SD:/server-database-prefab/quantum-neural-network/phi_framework -BD:/server-database-prefab/quantum-neural-network/phi_framework/build --check-stamp-file D:/server-database-prefab/quantum-neural-network/phi_framework/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCXXInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeCommonLanguageInclude.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeGenericSystem.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeInitializeConfigs.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeLanguageInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeRCInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeSystemSpecificInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\CMakeSystemSpecificInitialize.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Compiler\MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\PatchInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\UpdateInfo.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\cfgcmd.txt.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\gitclone.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\gitupdate.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\mkdirs.cmake.in;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\ExternalProject\shared_internal_commands.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindGit.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindPackageHandleStandardArgs.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\FindPackageMessage.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCXXLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Internal\CMakeCommonLinkerInformation.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Linker\Windows-MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-Initialize.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC-C.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows-MSVC.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\Windows.cmake;C:\Users\jeans\Miniconda3\envs\ffed-quantum\Library\share\cmake-3.31\Modules\Platform\WindowsPaths.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\FindOpenBLAS.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\FindXCFun.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeCCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeCXXCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeRCCompiler.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\3.31.6\CMakeSystem.cmake;D:\server-database-prefab\quantum-neural-network\phi_framework\build\libxcfun-prefix\tmp\libxcfun-mkdirs.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\CMakeFiles\libxcfun">
    </None>
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <ProjectReference Include="D:\server-database-prefab\quantum-neural-network\phi_framework\build\ZERO_CHECK.vcxproj">
      <Project>{65A3FD6B-2D7B-3F7D-B77E-295E98F42AA2}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>